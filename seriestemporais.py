import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.patches as mp

# Dados obtidos por meio do boletim epidemiológico diário publicado no site da prefeitura de Rondonópolis - MT 
# Todos os boletins publicados até o momento (07-03-2021) podem ser encontrados no seguinte endereço: http://www.rondonopolis.mt.gov.br/covid-19/boletins/
datas = pd.date_range(start = "20200514", end = "20210306", freq = "D")
casosTotais = [79, 87, 93, 99, 109, 121, 125, 132, 139, 142, 152, 157, 165, 182, 188, 199, 221, 236, 260, 289, 304, 322, 334, 342, 362, 383, 412, 439, 463, 486, 534, 586, 637, 716, 787, 844, 899, 949, 985, 1021, 1086, 1160, 1237, 1273, 1333, 1412, 1482, 1536, 1583, 1651, 1754, 1993, 2180, 2271, 2378, 2515, 2688, 2799, 2917, 3023, 3112, 3195, 3307, 3307, 3307, 3307, 3404, 3432, 3463, 3497, 3564, 3674, 3750, 3804, 3864, 3930, 4012, 4081, 4158, 4270, 4351, 4489, 4674, 4777, 4883, 5035, 5142, 5202, 5294, 5390, 5504, 5609, 5710, 5811, 5890, 5987, 6088, 6182, 6289, 6378, 6447, 6510, 6577, 6676, 6801, 6918, 7045, 7115, 7172, 7215, 7387, 7444, 7514, 7608, 7670, 7704, 7712, 7805, 7853, 7897, 7952, 7993, 8010, 8061, 8228, 8413, 8498, 8578, 8578, 8578, 8578, 8749, 8883, 8993, 9062, 9085, 9109, 9212, 9323, 9392, 9478, 9534, 9563, 9575, 9661, 9742, 9784, 9885, 9978, 9985, 9985, 9985, 10135, 10251, 10360, 10475, 10480, 10481, 10609, 10708, 10805, 10885, 10930, 10935, 10965, 11011, 11109, 11188, 11251, 11281, 11299, 11305, 11305, 11350, 11411, 11484, 11551, 11565, 11565, 11637, 11711, 11760, 11808, 11870, 11894, 11919, 12021, 12229, 12412, 12557, 12580, 12610, 12612, 12693, 12844, 12911, 12959, 13022, 13042, 13058, 13151, 13218, 13371, 13504, 13631, 13644, 13644, 13741, 13959, 14119, 14119, 14265, 14286, 14305, 14433, 14580, 14702, 14830, 14908, 14913, 14916, 15000, 15088, 15209, 15255, 15255, 15272, 15277, 15299, 15371, 15417, 15465, 15465, 15497, 15508, 15597, 15716, 15774, 15893, 15933, 15938, 15938, 16011, 16084, 16170, 16259, 16328, 16385, 16428, 16498, 16609, 16769, 16940, 17097, 17209, 17264, 17339, 17413, 17554, 17651, 17729, 17792, 17830, 17882, 18002, 18162, 18320, 18444, 18493, 18526, 18573, 18622, 18653, 18699, 18768, 18846, 18933, 19012, 19159, 19263, 19406, 19454, 19500, 19528, 19580, 19666, 19739, 19805, 19866, 19933, 19958, 20039, 20132, 20256, 20324, 20386, 20418]
casosRec = [49, 49, 50, 51, 51, 51, 53, 56, 62, 65, 65, 66, 73, 78, 82, 84, 91, 93, 94, 101, 103, 103, 121, 130, 136, 141, 153, 159, 164, 166, 168, 169, 171, 173, 478, 478, 478, 478, 478, 478, 478, 478, 478, 687, 742, 780, 825, 877, 903, 1040, 1153, 1178, 1235, 1264, 1331, 1368, 1409, 1441, 1479, 1545, 1627, 1742, 1894, 2045, 2164, 2260, 2355, 2419, 2620, 2769, 2941, 3112, 3196, 3196, 3370, 3477, 3594, 3611, 3649, 3689, 3736, 3946, 4061, 4194, 4312, 4404, 4452, 4572, 4698, 4805, 4839, 4951, 5064, 5134, 5228, 5322, 5417, 5525, 5647, 5733, 5797, 5873, 5964, 6044, 6138, 6199, 6334, 6421, 6553, 6650, 6726, 6828, 6891, 6999, 7083, 7149, 7207, 7270, 7341, 7401, 7462, 7517, 7571, 7607, 7645, 7719, 7814, 7920, 7920, 7920, 7920, 8102, 8191, 8305, 8365, 8453, 8536, 8598, 8683, 8744, 8836, 8927, 9046, 9127, 9164, 9199, 9276, 9340, 9393, 9468, 9468, 9575, 9617, 9659, 9778, 9869, 9928, 10018, 10039, 10136, 10220, 10340, 10394, 10394, 10430, 10495, 10571, 10677, 10737, 10787, 10836, 10862, 10903, 10944, 10986, 11030, 11079, 11123, 11168, 11182, 11236, 11267, 11304, 11383, 11448, 11492, 11540, 11599, 11707, 11789, 12007, 12053, 12118, 12159, 12204, 12258, 12373, 12420, 12491, 12546, 12611, 12686, 12745, 12884, 12971, 13101, 13151, 13171, 13273, 13430, 13503, 13599, 13740, 13789, 13855, 13911, 14050, 14195, 14286, 14374, 14410, 14476, 14526, 14588, 14696, 14698, 14698, 14702, 14785, 14860, 14901, 14941, 14961, 14981, 14981, 14981, 15030, 15050, 15071, 15165, 15165, 15165, 15227, 15337, 15337, 15337, 15431, 15442, 15562, 15611, 15803, 15903, 16003, 16063, 16318, 16379, 16379, 16379, 16465, 16465, 16535, 16698, 16766, 16798, 16939, 17019, 17138, 17234, 17484, 17516, 17516, 17556, 17586, 17586, 17586, 17638, 17703, 17772, 17976, 18241, 18293, 18522, 18658, 18758, 18808, 18861, 18915, 18979, 19002, 19026, 19065, 19140, 19165, 19215, 19290, 19325, 19377]
obitos = [2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 8, 9, 9, 10, 12, 13, 13, 13, 13, 13, 13, 13, 13, 18, 21, 21, 24, 25, 27, 30, 31, 34, 37, 38, 42, 47, 47, 48, 53, 55, 58, 65, 67, 71, 73, 77, 82, 87, 92, 106, 108, 111, 114, 114, 118, 121, 122, 127, 131, 135, 140, 142, 145, 150, 152, 158, 164, 168, 170, 170, 175, 178, 178, 181, 183, 189, 192, 193, 198, 203, 205, 207, 208, 211, 213, 216, 216, 217, 220, 220, 223, 224, 228, 231, 234, 234, 235, 239, 240, 241, 241, 243, 244, 246, 248, 248, 248, 253, 255, 259, 259, 260, 261, 262, 263, 265, 267, 269, 270, 270, 271, 271, 273, 273, 275, 276, 277, 277, 278, 281, 284, 285, 290, 294, 296, 298, 302, 305, 308, 310, 314, 314, 314, 316, 318, 319, 320, 321, 321, 322, 323, 325, 326, 327, 327, 330, 335, 336, 338, 340, 342, 345, 345, 345, 346, 347, 347, 347, 349, 350, 351, 351, 353, 355, 358, 359, 359, 362, 364, 365, 367, 367, 367, 368, 369, 370, 371, 371, 371, 375, 376, 377, 379, 384, 385, 387, 388, 389, 391, 394, 395, 396, 397, 398, 399, 399, 404, 405, 408, 409, 409, 410, 411, 411, 411, 411, 416, 421, 423, 426, 427, 428, 428, 428, 429, 432, 432, 433, 434, 435, 437, 438, 441, 441, 442, 444, 445, 445, 446, 450, 450, 451, 453, 453, 455, 455, 458, 458, 458, 461, 463, 466, 470, 471, 473, 473, 474, 476, 476, 476, 476, 476, 476, 477, 480, 481, 481, 482, 482, 484, 485, 486, 486, 488, 489, 489, 490, 492, 492, 492, 492, 493, 494, 494, 496, 497, 497, 498]

# Dado que a série de casos ativos não é publicada, a função a seguir retira dos casos totais os casos recuperados
# obtendo o número de casos ativos para cada período
def listSubtract(listA, listB):

    casosAtiv = list()

    if len(listA) != len(listB):
        print("Tamanho incompatível")

    i = 0
    while i < len(listA):
        casosAtiv.append(listA[i] - listB[i])
        i += 1

    return casosAtiv

casosAtivos = listSubtract(casosTotais, casosRec)

# Inicializa as séries temporais
serieObitos = pd.Series(data = obitos, index = datas)
serieCasos = pd.Series(data = casosAtivos, index = datas)

legenda0 = mp.Patch(color = 'orange', label = 'Casos ativos')
legenda1 = mp.Patch(color = 'red', label = 'Óbitos')

plt.title("COVID-19 em Rondonópolis - MT")
plt.legend(handles = [legenda0, legenda1])
plt.ylabel("Número de casos ativos")
plt.xlabel("Data")
plt.plot(serieObitos, color = 'red')
plt.plot(serieCasos, color = 'orange')
plt.savefig("covid.png")

